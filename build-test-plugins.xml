<?xml version="1.0"?>

<project name="portal-test-plugins" basedir="." default="test" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-test.xml" />

	<target name="deploy-simple-server-plugins">
		<if>
			<not>
				<equals arg1="${plugins.deployed}" arg2="true" />
			</not>
			<then>
				<delete dir="${liferay.home}/data" />
				<delete dir="${liferay.home}/logs" />
			</then>
		</if>

		<if>
			<equals arg1="${app.server.type}" arg2="websphere" />
			<then>
				<echo file="${lp.plugins.dir}/build.${user.name}.properties">app.server.type=websphere
app.server.dir=${simple.server.dir}
app.server.deploy.dir=${app.server.dir}/profiles/liferay/wsadmin-deploy
app.server.lib.global.dir=${app.server.dir}/lib/ext
app.server.portal.dir=${app.server.dir}/profiles/liferay/installedApps/liferay-cell/liferay-portal.ear/liferay-portal.war

auto.deploy.dir=${liferay.home}/deploy

plugins.includes=${plugins.includes}</echo>
			</then>
			<else>
				<echo file="${lp.plugins.dir}/build.${user.name}.properties">app.server.dir=${simple.server.dir}
app.server.lib.global.dir=${simple.server.lib.global.dir}
app.server.portal.dir=${simple.server.portal.dir}

auto.deploy.dir=${liferay.home}/deploy

plugins.includes=${plugins.includes}</echo>
			</else>
		</if>

		<if>
			<isset property="plugin.portlets.properties" />
			<then>
				<echo file="${lp.plugins.dir}/${plugin.types}/${portlet.plugins.includes}/docroot/WEB-INF/src/portlet-ext.properties">${plugin.portlets.properties}</echo>
			</then>
		</if>

		<if>
			<matches pattern="http" string="${test.build.plugins.war.zip.url}" />
			<then>
				<for list="${plugins.includes}" param="plugin.includes">
					<sequential>
						<copy todir="${liferay.home}/deploy">
							<fileset
								dir="plugins"
								includes="@{plugin.includes}*.war"
							/>
						</copy>
					</sequential>
				</for>
			</then>
			<else>
				<ant dir="${lp.plugins.dir}/${plugin.types}" inheritAll="false">
					<target name="clean" />
					<target name="deploy" />
				</ant>
			</else>
		</if>

		<delete dir="${lp.plugins.dir}/dist" />
		<mkdir dir="${lp.plugins.dir}/dist" />
	</target>

	<target name="deploy-versioned-simple-server-plugins">
		<if>
			<or>
				<equals arg1="${lp.version}" arg2="5.2.3" />
				<equals arg1="${lp.version}" arg2="5.2.4" />
			</or>
			<then>
				<property name="file.dir" value="5.2.2" />
			</then>
			<elseif>
				<equals arg1="${lp.version}" arg2="6.1.1" />
				<then>
					<property name="file.dir" value="6.1.1-ga2" />
				</then>
			</elseif>
			<else>
				<property name="file.dir" value="${lp.version}" />
			</else>
		</if>

		<copy todir="${liferay.home}/deploy">
			<fileset
				dir="${hudson.plugin.dependencies.dir}/${file.dir}"
				includes="${plugins.includes}"
			/>
		</copy>
	</target>

	<target name="deploy-websphere-6.1-plugins">
		<echo file="${lp.plugins.dir}/build.${user.name}.properties">app.server.dir=${app.server.tomcat.dir}
app.server.lib.global.dir=${app.server.tomcat.lib.global.dir}
app.server.portal.dir=${app.server.tomcat.portal.dir}

plugins.includes=${plugins.includes}</echo>

		<ant dir="${lp.plugins.dir}/${plugin.types}" inheritAll="false">
			<target name="clean" />
			<target name="war" />
		</ant>

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${vm.host} cmd.exe /c mkdir C:\WINDOWS\system32\config\systemprofile\liferay\websphere-deploy" />
		</exec>

		<exec executable="${pscp.executable}">
			<arg line="-pw ${vm.password} ${lp.plugins.dir}\dist\*.war ${vm.username}@${vm.host}:/WINDOWS/system32/config/systemprofile/liferay/deploy" />
		</exec>

		<sleep seconds="30" />

		<delete dir="${lp.plugins.dir}/dist" />
		<mkdir dir="${lp.plugins.dir}/dist" />

		<echo file="wsadmin-plugins.jacl">$AdminApp list</echo>

		<for list="${plugins.includes}" param="plugin.name">
			<sequential>
				<echo file="wsadmin-plugins.jacl" append="true">

$AdminApp update liferay-portal modulefile {-operation addupdate -contents C:/WINDOWS/system32/config/systemprofile/liferay/websphere-deploy/@{plugin.name}.war -contextroot /@{plugin.name} -contenturi @{plugin.name} -usedefaultbindings}

$AdminConfig save</echo>
			</sequential>
		</for>

		<exec executable="${pscp.executable}">
			<arg line="-pw ${vm.password} wsadmin-plugins.jacl ${vm.username}@${vm.host}:/" />
		</exec>

		<delete file="wsadmin-plugins.jacl" />

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${vm.host} cmd.exe /c C:\Progra~1\IBM\WebSphere\AppServer\bin\wsadmin.bat -f C:\wsadmin-plugins.jacl" />
		</exec>
	</target>

	<target name="deploy-websphere-8.0-plugins">
		<echo file="${lp.plugins.dir}/build.${user.name}.properties">app.server.dir=${app.server.tomcat.dir}
app.server.lib.global.dir=${app.server.tomcat.lib.global.dir}
app.server.portal.dir=${app.server.tomcat.portal.dir}

plugins.includes=${plugins.includes}</echo>

		<ant dir="${lp.plugins.dir}/${plugin.types}" inheritAll="false">
			<target name="clean" />
			<target name="war" />
		</ant>

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${vm.host} cmd.exe /c mkdir C:\WINDOWS\system32\config\systemprofile\liferay\websphere-deploy" />
		</exec>

		<exec executable="${pscp.executable}">
			<arg line="-pw ${vm.password} ${lp.plugins.dir}\dist\*.war ${vm.username}@${vm.host}:/WINDOWS/system32/config/systemprofile/liferay/deploy" />
		</exec>

		<sleep seconds="30" />

		<delete dir="${lp.plugins.dir}/dist" />
		<mkdir dir="${lp.plugins.dir}/dist" />

		<echo file="wsadmin-plugins.py">print AdminApp.list()</echo>

		<for list="${plugins.includes}" param="plugin.name">
			<sequential>
				<echo file="wsadmin-plugins.py" append="true">

print AdminApp.update('liferay-portal','modulefile','[-operation addupdate -contents C:/WINDOWS/system32/config/systemprofile/liferay/websphere-deploy/@{plugin.name}.war -contextroot /@{plugin.name} -contenturi @{plugin.name} -usedefaultbindings]')

print AdminConfig.save()</echo>
			</sequential>
		</for>

		<exec executable="${pscp.executable}">
			<arg line="-pw ${vm.password} wsadmin-plugins.py ${vm.username}@${vm.host}:/" />
		</exec>

		<delete file="wsadmin-plugins.py" />

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${vm.host} cmd.exe /c C:\Progra~1\IBM\WebSphere\AppServer\bin\wsadmin.bat -f C:\wsadmin-plugins.py" />
		</exec>
	</target>

	<target name="test-build-plugins-release">
		<taskdef classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="lib/development/xmltask.jar" name="xmltask" />

		<ant dir="${lp.plugins.dir}" target="build-summary" inheritAll="false" />

		<echo file="${lp.plugins.dir}/build.${user.name}.properties">plugins.includes=</echo>

		<xmltask source="${lp.plugins.dir}/summary.xml">
			<call path="plugins-summary/plugin">
				<param name="plugins.includes.plugin.marketplace" path="releng/marketplace/text()" />
				<param name="plugins.includes.plugin.name" path="artifact-id/text()" />
				<actions>
					<if>
						<equals arg1="@{plugins.includes.plugin.marketplace}" arg2="true" />
						<then>
							<echo append="true" file="${lp.plugins.dir}/build.${user.name}.properties">@{plugins.includes.plugin.name},</echo>
						</then>
					</if>
				</actions>
			</call>
		</xmltask>

		<ant antfile="${lp.plugins.dir}/build.xml" target="all" inheritAll="false" />

		<delete file="${lp.plugins.dir}/build.${user.name}.properties" />
	</target>

	<target name="test-create">
		<echo file="${lp.plugins.dir}/build.${user.name}.properties">app.server.dir=${app.server.tomcat.dir}</echo>

		<for list="ext,hooks,layouttpl,portlets,themes" param="plugin.type">
			<sequential>
				<var name="plugin.type" value="@{plugin.type}" />

				<script classpathref="project.classpath" language="beanshell">
					String pluginTypeSingular = project.getProperty("plugin.type");

					if (pluginTypeSingular.endsWith("s")) {
						pluginTypeSingular = pluginTypeSingular.substring(0, pluginTypeSingular.length() - 1);
					}

					project.setProperty("plugin.type.singular", pluginTypeSingular);
				</script>

				<delete dir="${lp.plugins.dir}/${plugin.type}/test-${plugin.type.singular}" />

				<exec dir="${lp.plugins.dir}/${plugin.type}" executable="create${file.suffix.bat}" outputproperty="create.output" resolveexecutable="true">
					<arg line="test test" />
				</exec>

				<echo>${create.output}</echo>

				<if>
					<or>
						<contains string="${create.output}" substring="BUILD FAILED" />
						<not>
							<available file="${lp.plugins.dir}/${plugin.type}/test-${plugin.type.singular}" />
						</not>
					</or>
					<then>
						<fail>Unable to create ${plugin.type}.</fail>
					</then>
				</if>

				<var name="create.output" unset="true" />

				<delete dir="${lp.plugins.dir}/${plugin.type}/test-${plugin.type.singular}" />
			</sequential>
		</for>
	</target>

	<target name="test-service-builder">
		<echo file="${lp.plugins.dir}/build.${user.name}.properties">app.server.dir=${app.server.tomcat.dir}</echo>

		<delete dir="${lp.plugins.dir}/portlets/sample-service-builder-portlet/docroot/WEB-INF/service" />
		<delete dir="${lp.plugins.dir}/portlets/sample-service-builder-portlet/docroot/WEB-INF/src/META-INF" />

		<ant antfile="${lp.plugins.dir}/portlets/sample-service-builder-portlet/build.xml" target="build-service" inheritAll="false" />

		<delete dir="${lp.plugins.dir}/portlets/sample-service-builder-portlet/docroot/WEB-INF/service" />
		<delete dir="${lp.plugins.dir}/portlets/sample-service-builder-portlet/docroot/WEB-INF/src/META-INF" />

		<if>
			<equals arg1="${scm.tool}" arg2="git" />
			<then>
				<exec dir="${lp.plugins.dir}" executable="git">
					<arg line="checkout portlets/sample-service-builder-portlet" />
				</exec>
			</then>
			<elseif>
				<equals arg1="${scm.tool}" arg2="svn" />
				<then>
					<exec executable="svn">
						<arg line="--username ${svn.username} --password ${svn.password} update ${lp.plugins.dir}/portlets/sample-service-builder-portlet/docroot/WEB-INF" />
					</exec>

					<exec executable="svn">
						<arg line="revert --recursive ${lp.plugins.dir}/portlets/sample-service-builder-portlet" />
					</exec>
				</then>
			</elseif>
		</if>
	</target>
</project>