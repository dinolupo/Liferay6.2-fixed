<?xml version="1.0"?>

<project name="build-common-java" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-common.xml" />

	<if>
		<and>
			<equals arg1="${app.server.type}" arg2="tomcat" />
			<antelope:endswith string="${app.server.portal.dir}" with="/portal-web/docroot" />
		</and>
		<then>
			<property name="portal-impl.classes.dir" value="${project.dir}/portal-web/docroot/WEB-INF/classes" />
		</then>
		<else>
			<property name="portal-impl.classes.dir" value="${project.dir}/portal-impl/classes" />
		</else>
	</if>

	<target name="clean">
		<delete dir="classes" />
		<delete dir="test-classes" />
		<delete dir="test-coverage" />
		<delete dir="test-results" />
		<delete dir="woven-classes" />
		<delete dir="${doc.dir}/${ant.project.name}/javadocs" />
		<delete file="${jar.file}.jar" failonerror="false" />
		<delete file="${jar.file}-javadoc.jar" failonerror="false" />
		<delete file="${jar.file}-sources.jar" failonerror="false" />
	</target>

	<target name="compile">
		<if>
			<not>
				<uptodate targetfile="classes/.touch">
					<srcfiles dir="src" includes="**/*.*" />
				</uptodate>
			</not>
			<then>
				<if>
					<available file="$${javac.destdir}" />
					<then>

						<!--
						Clean up stale dir that was accidentally introduced in
						0b63ac06aec90d42d428a1b23140303324125042.
						-->

						<delete dir="$${javac.destdir}" />
					</then>
				</if>

				<mkdir dir="classes" />

				<antcall target="compile-java">
					<param name="javac.classpathref" value="project.classpath" />
					<param name="javac.destdir" value="classes" />
					<param name="javac.srcdir" value="src" />
				</antcall>
			</then>
		</if>
	</target>

	<target name="compile-java">
		<copy todir="${javac.destdir}" preservelastmodified="true">
			<fileset dir="${javac.srcdir}" excludes="**/*.java" />
		</copy>

		<javac
			classpathref="${javac.classpathref}"
			compiler="${javac.compiler}"
			debug="${javac.debug}"
			deprecation="${javac.deprecation}"
			destdir="${javac.destdir}"
			encoding="${javac.encoding}"
			includeAntRuntime="false"
			nowarn="${javac.nowarn}"
			srcdir="${javac.srcdir}"
		/>

		<echo file="${javac.destdir}/.touch"></echo>
	</target>

	<target name="deploy" depends="jar">
		<if>
			<not>
				<uptodate targetfile="${deploy.dir}/${jar.file}.jar">
					<srcfiles dir="${basedir}" includes="${jar.file}.jar" />
				</uptodate>
			</not>
			<then>
				<copy file="${jar.file}.jar" todir="${deploy.dir}" preservelastmodified="true" />
			</then>
		</if>
	</target>

	<target name="jar" depends="compile">
		<if>
			<not>
				<uptodate targetfile="${jar.file}.jar">
					<srcfiles dir="classes" includes="**/*.*" />
				</uptodate>
			</not>
			<then>
				<if>
					<available file="bnd.bnd" />
					<then>
						<baseline-jar-macro
							bndRootFile="${project.dir}/common.bnd"
							file="bnd.bnd"
							outputPath="."
							rootProjectDir="${project.dir}"
							sourcePath="."
						/>
					</then>
					<else>
						<antcall target="manifest" />

						<jar
							basedir="classes"
							jarfile="${jar.file}.jar"
							manifest="classes/META-INF/MANIFEST.MF"
						/>
					</else>
				</if>
			</then>
		</if>
	</target>

	<target name="jar-javadoc" depends="javadoc">
		<jar
			basedir="${doc.dir}/${ant.project.name}/javadocs"
			jarfile="${jar.file}-javadoc.jar"
		/>
	</target>

	<target name="jar-sources">
		<jar
			basedir="src"
			jarfile="${jar.file}-sources.jar"
		/>
	</target>

	<target name="javadoc">
		<mkdir dir="${doc.dir}/${ant.project.name}/javadocs" />

		<javadoc
			breakiterator="yes"
			classpathref="project.classpath"
			destdir="${doc.dir}/${ant.project.name}/javadocs"
			encoding="UTF-8"
			maxmemory="2048m"
			packagenames="*.*"
			sourcepath="src"
			stylesheetfile="${project.dir}/tools/javadoc.css"
			useexternalfile="yes"
		>
			<arg line="-quiet -tag generated" />
		</javadoc>
	</target>

	<target name="manifest">
		<if>
			<not>
				<available file="classes/META-INF/MANIFEST.MF" />
			</not>
			<then>
				<manifest-helper analyze="true" />

				<mkdir dir="classes/META-INF" />

				<tstamp>
					<format property="build.time" pattern="EEE MMM d HH:mm:ss z yyyy" />
				</tstamp>

				<manifest file="classes/META-INF/MANIFEST.MF">
					<attribute name="Bundle-ManifestVersion" value="2" />
					<attribute name="Bundle-RequiredExecutionEnvironment" value="J2SE-1.5" />
					<attribute name="Bundle-Vendor" value="${release.info.vendor}" />
					<attribute name="Bundle-Version" value="${release.info.version}" />
					<attribute name="Export-Package" value="${export.packages}" />
					<attribute name="Import-Package" value="${import.packages}" />
					<attribute name="Javac-Compiler" value="${javac.compiler}" />
					<attribute name="Javac-Debug" value="${javac.debug}" />
					<attribute name="Javac-Deprecation" value="${javac.deprecation}" />
					<attribute name="Javac-Encoding" value="${javac.encoding}" />
					<attribute name="Jsp-Precompile" value="${jsp.precompile}" />
					<attribute name="Liferay-Portal-Build-Date" value="${release.info.build.date}" />
					<attribute name="Liferay-Portal-Build-Number" value="${release.info.build.number}" />
					<attribute name="Liferay-Portal-Build-Revision" value="${build.revision}" />
					<attribute name="Liferay-Portal-Build-Time" value="${build.time}" />
					<attribute name="Liferay-Portal-Code-Name" value="${release.info.code.name}" />
					<attribute name="Liferay-Portal-Parent-Build-Number" value="${release.info.parent.build.number}" />
					<attribute name="Liferay-Portal-Release-Info" value="${release.info.release.info}" />
					<attribute name="Liferay-Portal-Server-Info" value="${release.info.server.info}" />
					<attribute name="Liferay-Portal-Version" value="${release.info.version}" />
				</manifest>

				<if>
					<and>
						<isset property="manifest.bundle.name" />
						<isset property="manifest.bundle.symbolic.name" />
					</and>
					<then>
						<manifest file="classes/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Bundle-Name" value="${manifest.bundle.name}" />
							<attribute name="Bundle-SymbolicName" value="${manifest.bundle.symbolic.name}" />
						</manifest>
					</then>
				</if>

				<if>
					<isset property="manifest.premain.class" />
					<then>
						<manifest file="classes/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Can-Redefine-Classes" value="${manifest.can.redefine.classes}" />
							<attribute name="Can-Retransform-Classes" value="${manifest.can.retransform.classes}" />
							<attribute name="Premain-Class" value="${manifest.premain.class}" />
						</manifest>
					</then>
				</if>
			</then>
		</if>
	</target>

	<target name="release" depends="jar">
		<if>
			<available file="bnd.bnd" />
			<then>
				<release-to-repo-macro
					bndRootFile="${project.dir}/common.bnd"
					file="${jar.file}.jar"
				/>
			</then>
		</if>
	</target>
</project>